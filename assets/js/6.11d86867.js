(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,e,o){"use strict";o.r(e);var r=o(43),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),o("p",[t._v("EchoFetch is a decorator based HTTP client for browser & Node.JS based on Axios. It has been inspired by the Java library "),o("em",[t._v("RetroFit")]),t._v(".\nEchoFetch will obtain the data from an API using a decorator based system.")]),t._v(" "),o("h2",{attrs:{id:"how-does-it-work"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how-does-it-work"}},[t._v("#")]),t._v(" How does it work")]),t._v(" "),o("p",[t._v("EchoFetch is a thin layer on top of "),o("a",{attrs:{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"}},[t._v("Axios"),o("OutboundLink")],1),t._v(", therefore allowing it to both run in the browser & in Node.JS.\nIt used the ES7 "),o("em",[t._v("Decorator-syntax")]),t._v(" to create an implementation for a set of functions inside a class.")])])}),[],!1,null,null,null);e.default=a.exports}}]);